// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: lbddz.proto

package lbddz

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// LbddzClient is the client API for Lbddz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LbddzClient interface {
}

type lbddzClient struct {
	cc grpc.ClientConnInterface
}

func NewLbddzClient(cc grpc.ClientConnInterface) LbddzClient {
	return &lbddzClient{cc}
}

// LbddzServer is the server API for Lbddz service.
// All implementations must embed UnimplementedLbddzServer
// for forward compatibility
type LbddzServer interface {
	mustEmbedUnimplementedLbddzServer()
}

// UnimplementedLbddzServer must be embedded to have forward compatible implementations.
type UnimplementedLbddzServer struct {
}

func (UnimplementedLbddzServer) mustEmbedUnimplementedLbddzServer() {}

// UnsafeLbddzServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LbddzServer will
// result in compilation errors.
type UnsafeLbddzServer interface {
	mustEmbedUnimplementedLbddzServer()
}

func RegisterLbddzServer(s grpc.ServiceRegistrar, srv LbddzServer) {
	s.RegisterService(&Lbddz_ServiceDesc, srv)
}

// Lbddz_ServiceDesc is the grpc.ServiceDesc for Lbddz service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Lbddz_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "lbddz.lbddz",
	HandlerType: (*LbddzServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "lbddz.proto",
}
