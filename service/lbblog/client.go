// Code generated by baixctl genclient. DO NOT EDIT.
package lbblog

import (
	"context"
)

const ClientName = "lbblog"

func GetArticleList(ctx context.Context, req *GetArticleListReq) (*GetArticleListRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.GetArticleList(ctx, req)
}

func GetArticle(ctx context.Context, req *GetArticleReq) (*GetArticleRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.GetArticle(ctx, req)
}

func UpdateArticle(ctx context.Context, req *UpdateArticleReq) (*UpdateArticleRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.UpdateArticle(ctx, req)
}

func DelArticle(ctx context.Context, req *DelArticleReq) (*DelArticleRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.DelArticle(ctx, req)
}

func AddArticle(ctx context.Context, req *AddArticleReq) (*AddArticleRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.AddArticle(ctx, req)
}

func GetCategoryList(ctx context.Context, req *GetCategoryListReq) (*GetCategoryListRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.GetCategoryList(ctx, req)
}

func GetCategory(ctx context.Context, req *GetCategoryReq) (*GetCategoryRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.GetCategory(ctx, req)
}

func UpdateCategory(ctx context.Context, req *UpdateCategoryReq) (*UpdateCategoryRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.UpdateCategory(ctx, req)
}

func DelCategory(ctx context.Context, req *DelCategoryReq) (*DelCategoryRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.DelCategory(ctx, req)
}

func AddCategory(ctx context.Context, req *AddCategoryReq) (*AddCategoryRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.AddCategory(ctx, req)
}

func GetCommentList(ctx context.Context, req *GetCommentListReq) (*GetCommentListRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.GetCommentList(ctx, req)
}

func GetComment(ctx context.Context, req *GetCommentReq) (*GetCommentRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.GetComment(ctx, req)
}

func UpdateComment(ctx context.Context, req *UpdateCommentReq) (*UpdateCommentRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.UpdateComment(ctx, req)
}

func DelComment(ctx context.Context, req *DelCommentReq) (*DelCommentRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.DelComment(ctx, req)
}

func AddComment(ctx context.Context, req *AddCommentReq) (*AddCommentRsp, error) {
	if cliMgr.conn == nil {
		return nil, cliMgr.Err
	}
	return cliMgr.cli.AddComment(ctx, req)
}
