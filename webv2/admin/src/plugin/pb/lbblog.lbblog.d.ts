// Code generated by rpc_gen. DO NOT EDIT.

declare namespace lbblog {
    export const enum ErrCode {
        Nil = 0,
        // 40000 - 50000
        ErrArticleNotFound = 40000,
        ErrCategoryNotFound = 40001,
        ErrCommentNotFound = 40002,
    }

    export interface ModelArticle {
        id?: string;
        created_at?: number;
        updated_at?: number;
        deleted_at?: number;

        // @desc:文章标题
        title?: string;

        // @desc:文章描述
        desc?: string;

        // @desc:文章分类
        // type: uint64
        category_id?: string;

        // @desc:文章缩略图
        img?: string;

        // @desc:文章内容
        content?: string;
    }

    export interface ModelCategory {
        id?: string;
        created_at?: number;
        updated_at?: number;
        deleted_at?: number;
        name?: string;
    }

    export const enum ModelComment_Status {
        StatusNil = 0,
        StatusNormal = 1, // 正常
        StatusReview = 2, // 审核中
        StatusTakeDown = 3, // 撤下
    }

    export interface ModelComment {
        id?: string;
        created_at?: number;
        updated_at?: number;
        deleted_at?: number;

        // @desc: 文章
        // type: uint64
        article_id?: string;

        // @desc: 评论用户 系统用户
        // type: uint64
        user_id?: string;

        // @desc: 评论用户留下的邮箱 非系统用户
        user_email?: string;

        // @desc: 评论内容
        content?: string;

        // @desc: 评论状态
        // @ref_to: Comment.Status
        status?: number;
    }

    export interface AddArticleReq {
        data?: ModelArticle;
    }

    export interface AddArticleRsp {
        data?: ModelArticle;
    }

    export interface UpdateArticleReq {
        data?: ModelArticle;
    }

    export interface UpdateArticleRsp {
    }

    export interface DelArticleListReq {
        // @ref_to: GetArticleListReq.ListOption
        list_option?: lb.ListOption;
    }

    export interface DelArticleListRsp {
    }

    export interface GetArticleReq {
        id?: string;
    }

    export interface GetArticleRsp {
        data?: ModelArticle;
    }

    export const enum GetArticleListReq_ListOption {
        ListOptionNil = 0,
        ListOptionCategoryId = 1,
        ListOptionLikeTitle = 2,
    }

    export interface GetArticleListReq {
        list_option?: lb.ListOption;
    }

    export interface GetArticleListRsp {
        paginate?: lb.Paginate;
        list?: Array<ModelArticle>;
    }

    export interface AddCategoryReq {
        data?: ModelCategory;
    }

    export interface AddCategoryRsp {
        data?: ModelCategory;
    }

    export interface UpdateCategoryReq {
        data?: ModelCategory;
    }

    export interface UpdateCategoryRsp {
    }

    export interface DelCategoryListReq {
        // @ref_to: GetCategoryListReq.ListOption
        list_option?: lb.ListOption;
    }

    export interface DelCategoryListRsp {
    }

    export interface GetCategoryReq {
        id?: string;
    }

    export interface GetCategoryRsp {
        data?: ModelCategory;
    }

    export const enum GetCategoryListReq_ListOption {
        ListOptionNil = 0,
        ListOptionLikeName = 1,
    }

    export interface GetCategoryListReq {
        list_option?: lb.ListOption;
    }

    export interface GetCategoryListRsp {
        paginate?: lb.Paginate;
        list?: Array<ModelCategory>;
    }

    export interface AddCommentReq {
        data?: ModelComment;
    }

    export interface AddCommentRsp {
        data?: ModelComment;
    }

    export interface UpdateCommentReq {
        data?: ModelComment;
    }

    export interface UpdateCommentRsp {
    }

    export interface DelCommentListReq {
        // @ref_to: GetCommentListReq.ListOption
        list_option?: lb.ListOption;
    }

    export interface DelCommentListRsp {
    }

    export interface GetCommentReq {
        id?: string;
    }

    export interface GetCommentRsp {
        data?: ModelComment;
    }

    export const enum GetCommentListReq_ListOption {
        ListOptionNil = 0,
        ListOptionLikeContent = 1,
        ListOptionStatus = 2,
        ListOptionLikeUserEmail = 3,
        ListOptionArticleIdList = 4,
    }

    export interface GetCommentListReq {
        list_option?: lb.ListOption;
    }

    export interface GetCommentListRsp {
        paginate?: lb.Paginate;
        list?: Array<ModelComment>;
    }

    export interface lbblogService {
        // @cat:
        // @name:
        // @desc:
        // @error:
        AddArticle<R extends AddArticleReq, T>(r: R, o?: T): Promise<AddArticleRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        DelArticleList<R extends DelArticleListReq, T>(r: R, o?: T): Promise<DelArticleListRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        UpdateArticle<R extends UpdateArticleReq, T>(r: R, o?: T): Promise<UpdateArticleRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        GetArticle<R extends GetArticleReq, T>(r: R, o?: T): Promise<GetArticleRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        GetArticleList<R extends GetArticleListReq, T>(r: R, o?: T): Promise<GetArticleListRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        AddCategory<R extends AddCategoryReq, T>(r: R, o?: T): Promise<AddCategoryRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        DelCategoryList<R extends DelCategoryListReq, T>(r: R, o?: T): Promise<DelCategoryListRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        UpdateCategory<R extends UpdateCategoryReq, T>(r: R, o?: T): Promise<UpdateCategoryRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        GetCategory<R extends GetCategoryReq, T>(r: R, o?: T): Promise<GetCategoryRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        GetCategoryList<R extends GetCategoryListReq, T>(r: R, o?: T): Promise<GetCategoryListRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        AddComment<R extends AddCommentReq, T>(r: R, o?: T): Promise<AddCommentRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        DelCommentList<R extends DelCommentListReq, T>(r: R, o?: T): Promise<DelCommentListRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        UpdateComment<R extends UpdateCommentReq, T>(r: R, o?: T): Promise<UpdateCommentRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        GetComment<R extends GetCommentReq, T>(r: R, o?: T): Promise<GetCommentRsp>;

        // @cat:
        // @name:
        // @desc:
        // @error:
        GetCommentList<R extends GetCommentListReq, T>(r: R, o?: T): Promise<GetCommentListRsp>;
    }
}
