// Code generated by rpc_gen. DO NOT EDIT.

declare namespace lb {
    export interface google_protobuf_MethodOptions {
        ApiMethod?: string; // api 接口 默认为 POST , 可选 GET PUT POST DELETE
        AuthType?: string; //  接口认证类型 默认为 user , 可选 public,system,user
        IgnoreSvrRpc?: string; //  忽略生成 server 端 rpc 相关代码 存在即为ture
        GenCRUDSvrRpcTemp?: string; //  按模板生成CURD代码. ADD GET UPDATE DELETE LIST
        ModelName?: string; //  按ModelName 通过模板生成CURD代码
    }

    export const enum ErrCode {
        Nil = 0,
        Success = 200,
        // 20000 - 30000
        ErrAnInvalidRequest = 20001, // 无效的请求
        ErrAnInvalidRsp = 20002, // 无效的响应
    }

    export const enum DefaultOrderBy {
        DefaultOrderByNil = 0,
        DefaultOrderByCreatedAtDesc = 101,
        DefaultOrderByCreatedAtAcs = 102,
        DefaultOrderByIdDesc = 103,
    }

    export const enum DefaultListOption {
        DefaultListOptionNil = 0,
        // @type: stringList
        DefaultListOptionSelect = 101,
        // @type: uint32
        DefaultListOptionOrderBy = 102,
        // @type: stringList
        DefaultListOptionGroupBy = 103,
        // @type: bool
        DefaultListOptionWithTrash = 104,
        // @type: uint64List
        DefaultListOptionIdList = 105,
        // @type: timeStampRange
        DefaultListOptionCreatedAt = 106,
        // @type: uint32List
        DefaultListOptionCreatorIdList = 107,
        // @type: uint32List
        DefaultListOptionCorpIdList = 108,
    }

    export interface Paginate {
        size?: number;
        page?: number;

        // @desc: 总行数
        // type: uint64
        total?: string;
    }

    export interface ListOption {
        Options?: Array<ListOption_Option>;
        size?: number;
        page?: number;

        // @desc: 跳过统计总行数
        skip_total?: boolean;
    }

    export interface ListOption_Option {
        key?: number;
        value?: string;
    }

    export interface RawReq {
        buf?: string;
    }

    export interface RawRsp {
        buf?: string;
        content_type?: string;
    }

    export interface lbService {
    }
}
