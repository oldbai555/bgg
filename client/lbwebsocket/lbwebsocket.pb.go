// 指定proto版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: lbwebsocket.proto

// 指定默认包名

package lbwebsocket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCode int32

const (
	ErrCode_Success ErrCode = 0
	// 50000 - 60000
	ErrCode_ErrCodeConnectClosed ErrCode = 50000
	ErrCode_ErrChatNotFound      ErrCode = 50001
	ErrCode_ErrVisitorNotFound   ErrCode = 50002
	ErrCode_ErrMessageNotFound   ErrCode = 50003
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:     "Success",
		50000: "ErrCodeConnectClosed",
		50001: "ErrChatNotFound",
		50002: "ErrVisitorNotFound",
		50003: "ErrMessageNotFound",
	}
	ErrCode_value = map[string]int32{
		"Success":              0,
		"ErrCodeConnectClosed": 50000,
		"ErrChatNotFound":      50001,
		"ErrVisitorNotFound":   50002,
		"ErrMessageNotFound":   50003,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_lbwebsocket_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_lbwebsocket_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{0}
}

type WsType int32

const (
	WsType_WsTypeNil          WsType = 0
	WsType_WsTypeNetHandshake WsType = 1 // 建立握手
	WsType_WsTypeConnect      WsType = 2 // 连接
	WsType_WsTypeUnConnect    WsType = 3 // 断开连接
	WsType_WsTypeMessage      WsType = 4 // 发送消息
)

// Enum value maps for WsType.
var (
	WsType_name = map[int32]string{
		0: "WsTypeNil",
		1: "WsTypeNetHandshake",
		2: "WsTypeConnect",
		3: "WsTypeUnConnect",
		4: "WsTypeMessage",
	}
	WsType_value = map[string]int32{
		"WsTypeNil":          0,
		"WsTypeNetHandshake": 1,
		"WsTypeConnect":      2,
		"WsTypeUnConnect":    3,
		"WsTypeMessage":      4,
	}
)

func (x WsType) Enum() *WsType {
	p := new(WsType)
	*p = x
	return p
}

func (x WsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WsType) Descriptor() protoreflect.EnumDescriptor {
	return file_lbwebsocket_proto_enumTypes[1].Descriptor()
}

func (WsType) Type() protoreflect.EnumType {
	return &file_lbwebsocket_proto_enumTypes[1]
}

func (x WsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WsType.Descriptor instead.
func (WsType) EnumDescriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{1}
}

type Content_Type int32

const (
	Content_TypeNil      Content_Type = 0
	Content_TypeText     Content_Type = 1
	Content_TypeImage    Content_Type = 2
	Content_TypeVideo    Content_Type = 3
	Content_TypeDocument Content_Type = 4
)

// Enum value maps for Content_Type.
var (
	Content_Type_name = map[int32]string{
		0: "TypeNil",
		1: "TypeText",
		2: "TypeImage",
		3: "TypeVideo",
		4: "TypeDocument",
	}
	Content_Type_value = map[string]int32{
		"TypeNil":      0,
		"TypeText":     1,
		"TypeImage":    2,
		"TypeVideo":    3,
		"TypeDocument": 4,
	}
)

func (x Content_Type) Enum() *Content_Type {
	p := new(Content_Type)
	*p = x
	return p
}

func (x Content_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Content_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_lbwebsocket_proto_enumTypes[2].Descriptor()
}

func (Content_Type) Type() protoreflect.EnumType {
	return &file_lbwebsocket_proto_enumTypes[2]
}

func (x Content_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Content_Type.Descriptor instead.
func (Content_Type) EnumDescriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{3, 0}
}

type ModelChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int32  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int32  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt int32  `protobuf:"varint,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Vid       uint64 `protobuf:"varint,5,opt,name=vid,proto3" json:"vid,omitempty"`
	Username  string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *ModelChat) Reset() {
	*x = ModelChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelChat) ProtoMessage() {}

func (x *ModelChat) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelChat.ProtoReflect.Descriptor instead.
func (*ModelChat) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{0}
}

func (x *ModelChat) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelChat) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelChat) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelChat) GetDeletedAt() int32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelChat) GetVid() uint64 {
	if x != nil {
		return x.Vid
	}
	return 0
}

func (x *ModelChat) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// @desc: 访客
type ModelVisitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int32  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int32  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt int32  `protobuf:"varint,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// @desc: 访客UID
	Vid string `protobuf:"bytes,5,opt,name=vid,proto3" json:"vid,omitempty"`
	// @desc: 访客名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Ip   string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ModelVisitor) Reset() {
	*x = ModelVisitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelVisitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelVisitor) ProtoMessage() {}

func (x *ModelVisitor) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelVisitor.ProtoReflect.Descriptor instead.
func (*ModelVisitor) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{1}
}

func (x *ModelVisitor) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelVisitor) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelVisitor) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelVisitor) GetDeletedAt() int32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelVisitor) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *ModelVisitor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelVisitor) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ModelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt int32    `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int32    `protobuf:"varint,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt int32    `protobuf:"varint,4,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Content   *Content `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// @ref_to: ModelChat.id
	Cid uint64 `protobuf:"varint,6,opt,name=cid,proto3" json:"cid,omitempty"`
	// @desc: 发送消息的人
	From string `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	// @desc: 收信人
	Receive string `protobuf:"bytes,8,opt,name=receive,proto3" json:"receive,omitempty"`
	// @desc: 是否属于我们系统发送
	IsFromSys    bool   `protobuf:"varint,9,opt,name=is_from_sys,json=isFromSys,proto3" json:"is_from_sys,omitempty"`
	SysMessageId string `protobuf:"bytes,10,opt,name=sys_message_id,json=sysMessageId,proto3" json:"sys_message_id,omitempty"`
	SendAt       uint64 `protobuf:"varint,11,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
}

func (x *ModelMessage) Reset() {
	*x = ModelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelMessage) ProtoMessage() {}

func (x *ModelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelMessage.ProtoReflect.Descriptor instead.
func (*ModelMessage) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{2}
}

func (x *ModelMessage) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModelMessage) GetCreatedAt() int32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ModelMessage) GetUpdatedAt() int32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ModelMessage) GetDeletedAt() int32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ModelMessage) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ModelMessage) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ModelMessage) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ModelMessage) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

func (x *ModelMessage) GetIsFromSys() bool {
	if x != nil {
		return x.IsFromSys
	}
	return false
}

func (x *ModelMessage) GetSysMessageId() string {
	if x != nil {
		return x.SysMessageId
	}
	return ""
}

func (x *ModelMessage) GetSendAt() uint64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

type Content struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ref_to: Content.Type
	Type     uint32            `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Text     *Content_Text     `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Image    *Content_Image    `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Video    *Content_Video    `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	Document *Content_Document `protobuf:"bytes,5,opt,name=document,proto3" json:"document,omitempty"`
}

func (x *Content) Reset() {
	*x = Content{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{3}
}

func (x *Content) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Content) GetText() *Content_Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Content) GetImage() *Content_Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Content) GetVideo() *Content_Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Content) GetDocument() *Content_Document {
	if x != nil {
		return x.Document
	}
	return nil
}

// ws 交互的JSON数据体
type WsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *Content `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// @desc: 访客UID
	Vid string `protobuf:"bytes,2,opt,name=vid,proto3" json:"vid,omitempty"`
	// @desc: 系统用户
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// @ref_to: WsType
	Type uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	// @desc: 访客名称
	VName string `protobuf:"bytes,5,opt,name=v_name,json=vName,proto3" json:"v_name,omitempty"`
	// @desc: 系统用户名称
	UName  string `protobuf:"bytes,6,opt,name=u_name,json=uName,proto3" json:"u_name,omitempty"`
	SendAt uint64 `protobuf:"varint,11,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
	MsgId  string `protobuf:"bytes,12,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *WsData) Reset() {
	*x = WsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsData) ProtoMessage() {}

func (x *WsData) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsData.ProtoReflect.Descriptor instead.
func (*WsData) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{4}
}

func (x *WsData) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *WsData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *WsData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WsData) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *WsData) GetVName() string {
	if x != nil {
		return x.VName
	}
	return ""
}

func (x *WsData) GetUName() string {
	if x != nil {
		return x.UName
	}
	return ""
}

func (x *WsData) GetSendAt() uint64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

func (x *WsData) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

type HandleWsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WsData *WsData `protobuf:"bytes,1,opt,name=ws_data,json=wsData,proto3" json:"ws_data,omitempty"`
	Ip     string  `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *HandleWsReq) Reset() {
	*x = HandleWsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWsReq) ProtoMessage() {}

func (x *HandleWsReq) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWsReq.ProtoReflect.Descriptor instead.
func (*HandleWsReq) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{5}
}

func (x *HandleWsReq) GetWsData() *WsData {
	if x != nil {
		return x.WsData
	}
	return nil
}

func (x *HandleWsReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type HandleWsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WsData *WsData `protobuf:"bytes,1,opt,name=ws_data,json=wsData,proto3" json:"ws_data,omitempty"`
}

func (x *HandleWsRsp) Reset() {
	*x = HandleWsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleWsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleWsRsp) ProtoMessage() {}

func (x *HandleWsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleWsRsp.ProtoReflect.Descriptor instead.
func (*HandleWsRsp) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{6}
}

func (x *HandleWsRsp) GetWsData() *WsData {
	if x != nil {
		return x.WsData
	}
	return nil
}

type Content_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Content_Text) Reset() {
	*x = Content_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content_Text) ProtoMessage() {}

func (x *Content_Text) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content_Text.ProtoReflect.Descriptor instead.
func (*Content_Text) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Content_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Content_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Content_Image) Reset() {
	*x = Content_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content_Image) ProtoMessage() {}

func (x *Content_Image) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content_Image.ProtoReflect.Descriptor instead.
func (*Content_Image) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Content_Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Content_Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Content_Video) Reset() {
	*x = Content_Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content_Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content_Video) ProtoMessage() {}

func (x *Content_Video) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content_Video.ProtoReflect.Descriptor instead.
func (*Content_Video) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Content_Video) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Content_Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Content_Document) Reset() {
	*x = Content_Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbwebsocket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Content_Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content_Document) ProtoMessage() {}

func (x *Content_Document) ProtoReflect() protoreflect.Message {
	mi := &file_lbwebsocket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content_Document.ProtoReflect.Descriptor instead.
func (*Content_Document) Descriptor() ([]byte, []int) {
	return file_lbwebsocket_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Content_Document) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_lbwebsocket_proto protoreflect.FileDescriptor

var file_lbwebsocket_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0xa6, 0x01, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xca, 0x02,
	0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x79, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x79, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xae, 0x03, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x62, 0x77,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x39, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x1a, 0x19, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x19, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x1c, 0x0a, 0x08, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x51, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x69, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x79,
	0x70, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x22, 0xd8, 0x01, 0x0a, 0x06,
	0x57, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x57, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x07, 0x77, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x57, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x77, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x22, 0x3b, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x77, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x57, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x77, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x2a, 0x7d, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x10, 0xd0, 0x86, 0x03, 0x12, 0x15, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xd1, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x45,
	0x72, 0x72, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x10, 0xd2, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x45, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xd3, 0x86, 0x03, 0x2a,
	0x6a, 0x0a, 0x06, 0x57, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x69, 0x6c, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x57, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x57, 0x73, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x73, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x04, 0x32, 0x4f, 0x0a, 0x0b, 0x6c,
	0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x57, 0x73, 0x12, 0x18, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x73, 0x52, 0x73, 0x70, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x64, 0x62, 0x61,
	0x69, 0x35, 0x35, 0x35, 0x2f, 0x62, 0x67, 0x67, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x6c, 0x62, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_lbwebsocket_proto_rawDescOnce sync.Once
	file_lbwebsocket_proto_rawDescData = file_lbwebsocket_proto_rawDesc
)

func file_lbwebsocket_proto_rawDescGZIP() []byte {
	file_lbwebsocket_proto_rawDescOnce.Do(func() {
		file_lbwebsocket_proto_rawDescData = protoimpl.X.CompressGZIP(file_lbwebsocket_proto_rawDescData)
	})
	return file_lbwebsocket_proto_rawDescData
}

var file_lbwebsocket_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_lbwebsocket_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_lbwebsocket_proto_goTypes = []interface{}{
	(ErrCode)(0),             // 0: lbwebsocket.ErrCode
	(WsType)(0),              // 1: lbwebsocket.WsType
	(Content_Type)(0),        // 2: lbwebsocket.Content.Type
	(*ModelChat)(nil),        // 3: lbwebsocket.ModelChat
	(*ModelVisitor)(nil),     // 4: lbwebsocket.ModelVisitor
	(*ModelMessage)(nil),     // 5: lbwebsocket.ModelMessage
	(*Content)(nil),          // 6: lbwebsocket.Content
	(*WsData)(nil),           // 7: lbwebsocket.WsData
	(*HandleWsReq)(nil),      // 8: lbwebsocket.HandleWsReq
	(*HandleWsRsp)(nil),      // 9: lbwebsocket.HandleWsRsp
	(*Content_Text)(nil),     // 10: lbwebsocket.Content.Text
	(*Content_Image)(nil),    // 11: lbwebsocket.Content.Image
	(*Content_Video)(nil),    // 12: lbwebsocket.Content.Video
	(*Content_Document)(nil), // 13: lbwebsocket.Content.Document
}
var file_lbwebsocket_proto_depIdxs = []int32{
	6,  // 0: lbwebsocket.ModelMessage.content:type_name -> lbwebsocket.Content
	10, // 1: lbwebsocket.Content.text:type_name -> lbwebsocket.Content.Text
	11, // 2: lbwebsocket.Content.image:type_name -> lbwebsocket.Content.Image
	12, // 3: lbwebsocket.Content.video:type_name -> lbwebsocket.Content.Video
	13, // 4: lbwebsocket.Content.document:type_name -> lbwebsocket.Content.Document
	6,  // 5: lbwebsocket.WsData.content:type_name -> lbwebsocket.Content
	7,  // 6: lbwebsocket.HandleWsReq.ws_data:type_name -> lbwebsocket.WsData
	7,  // 7: lbwebsocket.HandleWsRsp.ws_data:type_name -> lbwebsocket.WsData
	8,  // 8: lbwebsocket.lbwebsocket.HandleWs:input_type -> lbwebsocket.HandleWsReq
	9,  // 9: lbwebsocket.lbwebsocket.HandleWs:output_type -> lbwebsocket.HandleWsRsp
	9,  // [9:10] is the sub-list for method output_type
	8,  // [8:9] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_lbwebsocket_proto_init() }
func file_lbwebsocket_proto_init() {
	if File_lbwebsocket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lbwebsocket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelVisitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleWsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content_Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbwebsocket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Content_Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lbwebsocket_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lbwebsocket_proto_goTypes,
		DependencyIndexes: file_lbwebsocket_proto_depIdxs,
		EnumInfos:         file_lbwebsocket_proto_enumTypes,
		MessageInfos:      file_lbwebsocket_proto_msgTypes,
	}.Build()
	File_lbwebsocket_proto = out.File
	file_lbwebsocket_proto_rawDesc = nil
	file_lbwebsocket_proto_goTypes = nil
	file_lbwebsocket_proto_depIdxs = nil
}
